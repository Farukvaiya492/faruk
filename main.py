import requests
import json
import time
import random
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# ‡¶¨‡¶ü‡ßá‡¶∞ ‡¶ü‡ßã‡¶ï‡ßá‡¶® (‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ü‡ßá‡¶∞ ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶¶‡¶ø‡ßü‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®)
BOT_TOKEN = "YOUR_BOT_TOKEN_HERE"

# ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡¶∏‡ßá‡¶∂‡¶® ‡¶∏‡ßç‡¶ü‡ßá‡¶ü‡¶∏
UID, REGION, AMOUNT, CONFIRM = range(4)

# ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡¶ø‡¶ï‡¶∂‡¶®‡¶æ‡¶∞‡¶ø
user_data = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """/start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã"""
    user = update.message.from_user
    welcome_text = (
        f"‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ {user.first_name}!\n\n"
        "FF Likes Bot - Free Fire ‡¶≤‡¶æ‡¶á‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶¨‡¶ü\n\n"
        "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ UID, Region ‡¶è‡¶¨‡¶Ç ‡¶ï‡¶§‡¶ó‡ßÅ‡¶≤‡ßã ‡¶≤‡¶æ‡¶á‡¶ï ‡¶ö‡¶æ‡¶® ‡¶§‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ‡¶¨‡ßá‡¶®‡•§\n\n"
        "‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá /like ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡¶ø‡¶® ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶¨‡¶æ‡¶ü‡¶® ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®‡•§"
    )
    
    # ‡¶ï‡ßÄ‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶¨‡¶æ‡¶ü‡¶®
    keyboard = [['/like']]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def like_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶≤‡¶æ‡¶á‡¶ï ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ"""
    await update.message.reply_text(
        "‡¶ö‡¶≤‡ßÅ‡¶® ‡¶≤‡¶æ‡¶á‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶ø!\n\n"
        "‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Free Fire UID ‡¶¶‡¶ø‡¶®:",
        reply_markup=ReplyKeyboardRemove()
    )
    return UID

async def get_uid(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """UID ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡¶æ"""
    uid = update.message.text.strip()
    user_data[update.message.chat_id] = {'uid': uid}
    
    await update.message.reply_text(
        "‡¶≠‡¶æ‡¶≤‡ßã! ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Region ‡¶¶‡¶ø‡¶® (‡¶Ø‡ßá‡¶Æ‡¶®: asia, global, india ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø):"
    )
    return REGION

async def get_region(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Region ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡¶æ"""
    region = update.message.text.strip()
    user_data[update.message.chat_id]['region'] = region
    
    await update.message.reply_text(
        "‡¶ï‡¶§‡¶ó‡ßÅ‡¶≤‡ßã ‡¶≤‡¶æ‡¶á‡¶ï ‡¶ö‡¶æ‡¶®? (‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü: 100):\n\n"
        "‡¶Ü‡¶™‡¶®‡¶ø 1-1000 ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§"
    )
    return AMOUNT

async def get_amount(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶≤‡¶æ‡¶á‡¶ï‡ßá‡¶∞ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡¶æ"""
    amount_text = update.message.text.strip()
    
    try:
        amount = int(amount_text)
        if amount < 1 or amount > 1000:
            await update.message.reply_text("‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§! ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ 1-1000 ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¶‡¶ø‡¶®‡•§")
            return AMOUNT
    except ValueError:
        await update.message.reply_text("‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§! ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¶‡¶ø‡¶® (‡¶Ø‡ßá‡¶Æ‡¶®: 100)")
        return AMOUNT
    
    user_data[update.message.chat_id]['amount'] = amount
    
    # ‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ‡ßá‡¶∂‡¶® ‡¶ï‡ßÄ‡¶¨‡ßã‡¶∞‡ßç‡¶°
    keyboard = [['‡¶π‡ßç‡¶Ø‡¶æ‡¶Å', '‡¶®‡¶æ']]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    user_info = user_data[update.message.chat_id]
    await update.message.reply_text(
        f"‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø:\n\n"
        f"UID: {user_info['uid']}\n"
        f"Region: {user_info['region']}\n"
        f"‡¶≤‡¶æ‡¶á‡¶ï: {user_info['amount']}\n\n"
        f"‡¶ï‡¶ø ‡¶≤‡¶æ‡¶á‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶¨?",
        reply_markup=reply_markup
    )
    return CONFIRM

async def confirm_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ"""
    choice = update.message.text.lower()
    
    if choice == '‡¶π‡ßç‡¶Ø‡¶æ‡¶Å':
        user_info = user_data[update.message.chat_id]
        
        # ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú
        loading_msg = await update.message.reply_text("‚è≥ ‡¶≤‡¶æ‡¶á‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
        
        # API ‡¶ï‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ
        result = send_like_request(
            user_info['uid'], 
            user_info['region'], 
            user_info['amount']
        )
        
        # ‡¶∞‡ßá‡¶∏‡ßç‡¶™‡¶®‡ßç‡¶∏ ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ
        if 'error' in result:
            response_text = f"‚ùå ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá:\n{result['error']}"
        else:
            response_text = f"‚úÖ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶≤‡¶æ‡¶á‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!\n\n"
            if 'likes_sent' in result:
                response_text += f"‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶≤‡¶æ‡¶á‡¶ï: {result['likes_sent']}\n"
            if 'total_likes' in result:
                response_text += f"‡¶Æ‡ßã‡¶ü ‡¶≤‡¶æ‡¶á‡¶ï: {result['total_likes']}\n"
        
        await context.bot.delete_message(chat_id=update.message.chat_id, message_id=loading_msg.message_id)
        await update.message.reply_text(response_text, reply_markup=ReplyKeyboardRemove())
        
    else:
        await update.message.reply_text(
            "‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶∞‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá /like ‡¶¶‡¶ø‡¶®‡•§",
            reply_markup=ReplyKeyboardRemove()
        )
    
    # ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡¶∏‡ßá‡¶∂‡¶® ‡¶∂‡ßá‡¶∑
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡¶∏‡ßá‡¶∂‡¶® ‡¶ï‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ"""
    await update.message.reply_text(
        "‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶π‡¶≤‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ /like ‡¶¶‡¶ø‡¶®‡•§",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°"""
    help_text = (
        "ü§ñ FF Likes Bot Help\n\n"
        "‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶∏:\n"
        "/start - ‡¶¨‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®\n"
        "/like - ‡¶≤‡¶æ‡¶á‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®\n"
        "/help - ‡¶è‡¶á ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®\n\n"
        "‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞:\n"
        "1. /like ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡¶ø‡¶®\n"
        "2. ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ UID ‡¶¶‡¶ø‡¶®\n"
        "3. ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Region ‡¶¶‡¶ø‡¶®\n"
        "4. ‡¶ï‡¶§‡¶ó‡ßÅ‡¶≤‡ßã ‡¶≤‡¶æ‡¶á‡¶ï ‡¶ö‡¶æ‡¶® ‡¶§‡¶æ ‡¶¶‡¶ø‡¶®\n"
        "5. ‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ ‡¶ï‡¶∞‡ßÅ‡¶®\n\n"
        "üìù ‡¶®‡ßã‡¶ü: ‡¶è‡¶á ‡¶¨‡¶ü‡¶ü‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶â‡¶¶‡ßç‡¶¶‡ßá‡¶∂‡ßç‡¶Ø‡ßá ‡¶§‡ßà‡¶∞‡¶ø‡•§"
    )
    await update.message.reply_text(help_text)

def send_like_request(uid, region, amount=100):
    """
    ‡¶≤‡¶æ‡¶á‡¶ï API-‡¶§‡ßá Chrome user agent ‡¶¶‡¶ø‡ßü‡ßá ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶™‡¶æ‡¶†‡¶æ‡¶®
    """
    chrome_user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
    
    url = f"https://likes.ffgarena.cloud/api/v2/likes?uid={uid}&amount_of_likes={amount}&auth=trial-7d&region={region}"
    
    headers = {
        'User-Agent': chrome_user_agent,
        'Accept': 'application/json, text/plain, */*',
        'Accept-Language': 'en-US,en;q=0.9',
        'Accept-Encoding': 'gzip, deflate, br',
        'Origin': 'https://ffgarena.cloud',
        'Referer': 'https://ffgarena.cloud/',
        'Connection': 'keep-alive',
        'Sec-Fetch-Dest': 'empty',
        'Sec-Fetch-Mode': 'cors',
        'Sec-Fetch-Site': 'same-site'
    }
    
    try:
        response = requests.get(url, headers=headers, timeout=10)
        
        if response.status_code == 200:
            return response.json()
        else:
            return {"error": f"‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡ßü‡ßá‡¶õ‡ßá, ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶ï‡ßã‡¶°: {response.status_code}"}
    
    except requests.exceptions.RequestException as e:
        return {"error": f"‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶è‡¶ï‡ßç‡¶∏‡ßá‡¶™‡¶∂‡¶®: {str(e)}"}
    except json.JSONDecodeError as e:
        return {"error": f"JSON ‡¶°‡¶ø‡¶ï‡ßã‡¶° ‡¶è‡¶∞‡¶∞: {str(e)}"}

def main():
    """‡¶Æ‡ßá‡¶á‡¶® ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® - ‡¶¨‡¶ü ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ"""
    # ‡¶¨‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
    application = Application.builder().token(BOT_TOKEN).build()
    
    # ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡¶∏‡ßá‡¶∂‡¶® ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('like', like_command)],
        states={
            UID: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_uid)],
            REGION: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_region)],
            AMOUNT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_amount)],
            CONFIRM: [MessageHandler(filters.TEXT & ~filters.COMMAND, confirm_request)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )
    
    # ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(conv_handler)
    
    # ‡¶¨‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®
    print("‡¶¨‡¶ü ‡¶ö‡¶≤‡¶õ‡ßá...")
    application.run_polling()

if __name__ == "__main__":
    main()